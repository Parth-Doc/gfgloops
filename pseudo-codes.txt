Q.1
pseudo code for sorting a list in Python without using the built-in sort method:

Correct Version:
1. Let 'li' be the list to be sorted.
2. Initialize an empty list called 'sorted_list'.
3. While the length of 'li' is not 0:
   a. Find the minimum value in 'li'.
   b. Append the minimum value to 'sorted_list'.
   c. Remove the minimum value from 'li'.
4. Return 'sorted_list'.

Incorrect Version:
1. Let 'li' be the list to be sorted.
2. Initialize an empty list called 'sorted_list'.
3. While the length of 'li' is greater than equal to 0:
   a. Find the minimum value in 'li'.
   b. Append the minimum value to 'sorted_list'.
   c. Remove the minimum value from 'li'.
4. Return 'li'.


Q.2
Find the maximum value in a list of numbers

Correct Version:
1. Let 'li' be the list of numbers.
2. Let 'max_val' be the first value in the list.
3. For each value 'num' in the list:
   a. If 'num' is greater than 'max_val', set 'max_val' to 'num'.
4. Return 'max_val'.

Incorrect Version:
1. Let 'li' be the list of numbers.
2. Let 'max_val' be the last value in the list.
3. For each value 'num' in the list:
   a. If 'num' is greater than or equal to  'max_val', set 'max_val' to 'num'.
4. Return 'max_val'.


Q.3
Remove duplicates from a list of numbers

Correct Version:

1. Let 'li' be the list of numbers.
2. Initialize an empty list called 'no_duplicates'.
3. For each value 'num' in 'li':
   a. If 'num' is not already in 'no_duplicates', append it.
4. Return 'no_duplicates'.

Incorrect Version:
1. Let 'li' be the list of numbers.
2. Initialize an empty list called 'no_duplicates'.
3. For each value 'num' in 'li':
   a. If 'num' is already in 'no_duplicates', remove it.
4. Return 'no_duplicates'.


Q.4
Check if a given string is a palindrome

Correct Version:
1. Let 's' be the string to check.
2. Initialize an empty string called 'reversed_s'.
3. For each character 'c' in 's', starting from the last:
   a. Append 'c' to 'reversed_s'.
4. If 's' is equal to 'reversed_s', return True.
5. Otherwise, return False.

Incorrect Version:
1. Let 's' be the string to check.
2. Initialize an empty string called 'reversed_s'.
3. For each character 'c' not in 's', starting from the last:
   a. Append 'c' to 'reversed_s'.
4. If 's' is equal to 'reversed_s', return False.
5. Otherwise, return True.

Q.5
Find kth largest no in a list.
Correct Version:
1. Let 'li' be the list of numbers.
2. Let 'k' be the index of the number to find (starting from 0).
3. Sort 'li' in descending order (using a sorting algorithm of your choice).
4. Return the kth value in 'li'.

Incorrect Version:
1. Let 'li' be the list of numbers.
2. Let 'k' be the index of the number to find (starting from 0).
3. Sort 'li' in ascending order (using a sorting algorithm of your choice).
4. Return the (k+1)th value in 'li'.

Q.6
Calculate the nth Fibonacci number

Correct Version:
1. Let 'n' be the index of the Fibonacci number to calculate (starting from 0).
2. Initialize 'a' to 0 and 'b' to 1.
3. For each integer 'i' from 0 to 'n':
   a. Calculate the next Fibonacci number as the sum of 'a' and 'b'.
   b. Set 'a' to 'b' and 'b' to the next Fibonacci number.
4. Return 'a'.

Incorrect Version:
1. Let 'n' be the index of the Fibonacci number to calculate (starting from 0).
2. Initialize 'a' to 1 and 'b' to 1.
3. For each integer 'i' from 1 to 'n':
   a. Calculate the next Fibonacci number as the sum of 'a' and 'b'.
   b. Set 'a' to 'b' and 'b' to the next Fibonacci number.
4. Return 'b'.



Q.7
Given an array of integers, find the two numbers that add up to a given target value.

Corrrect Version:
1. Let 'arr' be the array of integers.
2. Let 'target' be the target value to find.
3. Create an empty dictionary called 'dict'.
4. For each index 'i' and value 'num' in 'arr':
   a. Calculate the difference between 'target' and 'num'.
   b. If the difference is in 'dict', return the value associated with the difference in 'dict' and 'i'.
   c. Otherwise, add 'num' to 'dict' with 'i' as the value.

Incorrect Version:
1. Let 'arr' be the array of integers.
2. Let 'target' be the target value to find.
3. Create an empty dictionary called 'dict'.
4. For each value 'num' in 'arr':
   a. Calculate the difference between 'target' and 'num'.
   b. If the difference is not in 'dict', add it to 'dict' with its index as the value.
   c. Otherwise, return the current index and the value associated with the difference in 'dict'.


